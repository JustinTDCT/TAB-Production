veeamxfs="yes"
iscsifail="no"
rebooted="no"
scriptver="3.0.0"
webmin="yes"
state="done"
vupw=""
tapw=""
nasip="0.0.0.0"
lturl="https://none.com"
devnm="/dev/sdb"
host="HOST_SERVER_NAME"
docker="yes"
serverip="0.0.0.0"

########
# veeamxfs = yes/no -- is this a veeamxfs system (note: if set to 'no' state is automatically set to 'done', if set to 'yes' state is set to 'new'
# iscisfil = yes/no -- on first fail no changes to yes, on second fail if value is yes try reboot and set rebooted to yes; subsequent fails will see rebooted as yes and not try reboot again
# rebooted = yes/no -- see above
# scriptver = <version of the script system we're working with>
# webmin = yes/no -- is webmin to be installed
# state = if the setup script was used, what state are we in? state will be pulled from this file
# - new -- start the script without loading any data
# - anything else loads data and presents the main menu to confirm, what follows determines where it picks up from
# - change_nas_ip -- set the NAS IP
# - do_updates -- run system updates
# - set_initiator -- iSCSI initiator work
# - edit_scsi_conf -- update the iSCSI conf
# - set_uuid -- set the iSCSI vol in fstab
# - create_veeam_user -- setup the veeam user
# - done -- nothing further needed from the setup scripts
# vupw -- veeam user password, when state is done this is wiped
# tabpw -- tab password, see above
# nasip -- the NAS IP iSCSI is setup to use
# lturl -- LT agent url
# devnm -- the device (ie /dev/sdb etc) which iSCSI lives on
# host -- the server which hosts this VM
# docker - install docker-ce and compose
